services:

  nginx-gateway:
    build:
      context: ./auth-full
      dockerfile: ./nginx/Dockerfile
    hostname: nginx-gateway
    ports:
      - "80:80"
      - "443:443"
      - "3000:3000"
    volumes:
      - ./auth-full/nginx/nginx.conf:/etc/nginx/nginx.conf
    healthcheck:
      test: service nginx status || exit 1
      interval: 5s
      timeout: 20s
      retries: 10
    depends_on:
      oauth2-proxy:
        condition: service_healthy
      patients-service:
        condition: service_healthy
      doctors-service:
        condition: service_healthy
      appointments-service:
        condition: service_healthy
      alive-service:
        condition: service_healthy
      webapp:
        condition: service_started
      user-webapp:
        condition: service_started
    networks:
      - gestmed-network

  keycloak-database:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak
    container_name: keycloak-database
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "keycloak"]
      interval: 5s
      timeout: 2s
      retries: 5
    networks:
      - gestmed-network 

  keycloak-idp:
    build:
      context: ./auth-full
      dockerfile: ./keycloak/Dockerfile
    hostname: keycloak-idp.127.0.0.1.nip.io
    container_name: keycloak-idp
    environment:
      KC_PROXY_HEADERS: xforwarded
      KC_HOSTNAME: https://keycloak-idp.127.0.0.1.nip.io
      KC_HTTPS_PORT: 443
    command:
      - start
      - --optimized
      - --import-realm
    healthcheck:
      test: ["CMD", "curl", "-k", "-f", "https://localhost:9000/health/ready"]
      interval: 5s
      timeout: 20s
      retries: 5
      start_period: 30s
    depends_on:
      keycloak-database:
        condition: service_healthy
    networks:
      - gestmed-network 

  oauth2-proxy:
    container_name: oauth2-proxy
    build:
      context: ./auth-full
      dockerfile: ./oAuth2-proxy/Dockerfile
    volumes:
      - ./auth-spike/oAuth2-proxy/oauth2-proxy.cfg:/oauth2-proxy.cfg
    command: "--config=/oauth2-proxy.cfg"
    depends_on:
      keycloak-idp:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4180/ready"]
      interval: 15s
      timeout: 2s
      retries: 5
    networks:
      - gestmed-network

networks:
  gestmed-network:
    driver: bridge
